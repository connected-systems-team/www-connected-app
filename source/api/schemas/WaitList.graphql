schema {
    query: Query
    mutation: Mutation
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Mutation {
    waitListCreate(data: WaitListCreationInput!): WaitList!
    waitListDelete(forceDelete: Boolean, id: String!): Boolean!
    waitListEntryCreate(emailAddress: String!, waitListIdentifier: String!): WaitListEntry!
    waitListEntryDelete(emailAddress: String, id: String, waitListIdentifier: String): Boolean!
    waitListUpdate(data: WaitListUpdateInput!): WaitList!
}

type Pagination {
    itemIndex: Int!
    itemIndexForNextPage: Int
    itemIndexForPreviousPage: Int
    itemsPerPage: Int!
    itemsTotal: Int!
    page: Int!
    pagesTotal: Int!
}

input PaginationInput {
    itemIndex: Int
    itemsPerPage: Int!
}

type Query {
    waitListEntries(input: QueryWaitListEntriesInput): WaitListEntriesResult!
    waitLists(input: PaginationInput): WaitListResult!
}

input QueryWaitListEntriesInput {
    dateColumn: String
    endDate: DateTimeISO
    itemIndex: Int
    itemsPerPage: Int!
    startDate: DateTimeISO
    waitListId: String
    waitListIdentifier: String
}

type WaitList {
    createdAt: DateTimeISO!
    createdByAccountId: String!
    createdByProfileId: String!
    description: String
    id: String!
    identifier: String!
    title: String!
    updatedAt: DateTimeISO!
    updatedByAccountId: String
    updatedByProfileId: String
}

input WaitListCreationInput {
    description: String
    emailAutomationKey: String
    identifier: String
    title: String!
}

type WaitListEntriesResult {
    items: [WaitListEntry!]!
    pagination: Pagination
}

type WaitListEntry {
    accountId: String
    contactedAt: DateTimeISO
    countryCode: String
    createdAt: DateTimeISO!
    emailAddress: String!
    id: String!
    ipAddress: String
    message: String
    name: String
    notifiedAt: DateTimeISO
    profileId: String
    referredBy: String
    updatedAt: DateTimeISO!
    userAgent: String
    waitList: WaitList
    waitListId: String!
}

type WaitListResult {
    items: [WaitList!]!
    pagination: Pagination
}

input WaitListUpdateInput {
    description: String
    emailAutomationKey: String
    id: String
    identifier: String
    title: String
}
